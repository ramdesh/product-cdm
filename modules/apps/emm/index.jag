<%
//Module objects
var Absolute = require('modules/absolute.js').mvc;
var Goose = require('modules/goose.js').goose;
var DeviceModule = require('modules/device.js').device;
var UserModule = require('modules/user.js').user;
var NotificationModule = require('modules/notification.js').notification;
var StoreModule = require('modules/store.js').store;
var WebconsoleModule = require('modules/webconsole.js').webconsole;
var DashboardModule = require('modules/dashboard.js').dashboard;
var FeatureModule = require('modules/feature.js').feature;
var helpers = require('modules/helpers.js');
var common = require('modules/common.js');
// Routers
var UserRouter = require('api/userRouter.js').user;
var FeatureRouter = require('api/featureRouter.js').feature;
var PermissionRouter = require('api/permissionRouter.js').permission;
var PolicyRouter = require('api/policyRouter.js').policy;
var DeviceRouter = require('api/deviceRouter.js').device;
var NotificationRouter = require('api/notificationRouter.js').notification;
var GroupRouter = require('api/groupRouter.js').group;
var ReportRouter = require('api/reportRouter.js').reports;
var AppRouter = require('api/appRouter.js').app;
var PlatformRouter = require('api/platformRouter.js').platform;
var log = new Log();
var configs = require('config/emm.js').config();
var GOOSE_CONFIGS = {
    CONTEXT: configs.APP_CONTEXT + configs.API_CONTEXT + "/",
    AUTH_SUPPORT: true
};
var ABSOLUTE_CONFIGS = {
    SERVER_URL: configs.APP_CONTEXT,
    IGNORE: [],
    API: configs.API_CONTEXT,
    AUTH_SUPPORT: true
};
var EMM_USER_SESSION = "emmConsoleUser";
var db = common.getDatabase();
var current_user = session.get(EMM_USER_SESSION);
var current_user_roles;
if (current_user != undefined) {
    current_user_roles = current_user.roles;
}
GOOSE_CONFIGS.AUTH_USER_ROLES = current_user_roles;
ABSOLUTE_CONFIGS.AUTH_USER_ROLES = current_user_roles;
var router = new Goose(GOOSE_CONFIGS);
ABSOLUTE_CONFIGS.ROUTER = router;
var mvc = new Absolute(ABSOLUTE_CONFIGS);
//Setting up the authorization roles
router.setupRules(require('/config/route.json').apiRoutes);
mvc.setupRules(require('/config/route.json').pageRoutes);
var device = new DeviceModule();
var user = new UserModule();
var notification = new NotificationModule();
var webconsole = new WebconsoleModule(db);
var dashboard = new DashboardModule(db);
var feature = new FeatureModule(db);
var store = new StoreModule(db);
var userRouterInstance = new UserRouter(db, router);
var featureRouterInstance = new FeatureRouter(db, router);
var permissionRouterInstance = new PermissionRouter(db, router);
var policyRouterInstance = new PolicyRouter(db, router);
var deviceRouterInstance = new DeviceRouter(db, router);
var notificationRouterInstance = new NotificationRouter(db, router);
var groupRouterInstance = new GroupRouter(db, router);
var reportRouterInstance = new ReportRouter(db, router);
var platformRouterInstance = new PlatformRouter(db, router);
// New router method
AppRouter.route(db, router);
router.post('store/users/devices', function(ctx) {
    common.handleError(this, ctx, function() {
        var result = store.getAllDevicesFromEmail(ctx);
        print(result);
    });
});
router.post('store/users/apps', function(ctx) {
    common.handleError(this, ctx, function() {
        var result = store.getAllAppFromDevice(ctx);
    });
});
router.get('dashboard/devices/all/percentage/byos', function(ctx) {
    var result = dashboard.getDeviceCountByOS(ctx);
    if (result != null && result != undefined) {
        response.content = result;
        response.status = 200;
    } else {
        response.status = 404;
    }
});
router.get('dashboard/devices/all/percentage/byownership', function(ctx) {
    var result = dashboard.getDeviceCountByOwnership(ctx);
    if (result != null && result != undefined) {
        response.content = result;
        response.status = 200;
    } else {
        response.status = 404;
    }
});
router.get('dashboard/all/info', function(ctx) {
    var result = dashboard.getDashboardInfo(ctx);
    if (result != null && result != undefined) {
        response.content = result;
        response.status = 200;
    } else {
        response.status = 404;
    }
});
router.get('dashboard/devices/android/info', function(ctx) {
    var result = dashboard.getAllAndroidDevices(ctx);
    if (result != null && result != undefined) {
        response.content = result;
        response.status = 200;
    } else {
        response.status = 404;
    }
});
router.get('dashboard/devices/ios/info', function(ctx) {
    var result = dashboard.getAlliOSDevices(ctx);
    if (result != null && result != undefined) {
        response.content = result;
        response.status = 200;
    } else {
        response.status = 404;
    }
});
router.get('dashboard/policies/compliance', function(ctx) {
    var result = notification.getPolicyComplianceDevicesCount(ctx); //should be move to dashborad.js
    if (result != null && result != undefined) {
        response.content = result;
        response.status = 200;
    } else {
        response.status = 404;
    }
});
router.get('webconsole/devices', function(ctx) {
    var result = webconsole.getDevicesCountAndUserCountForAllGroups(ctx);
    response.content = result;
});
router.get('webconsole/listDevices', function(ctx) {
    var result = webconsole.getDevices(ctx);
    print(result);
});
router.get('webconsole/allUsers', function(ctx) {
    var result = webconsole.getAllUsers(ctx);
    print(result);
});
router.get('features', function(ctx) {
    var result = feature.getAllFeatures(ctx);
    if (result != null && result != undefined) {
        response.content = result;
        response.status = 200;
    } else {
        response.status = 404;
    }
});
router.get('find', function(ctx) {
    var driver = require('/modules/driver.js').driver;
    var query = driver.execute("SELECT * FROM PLATFORMS WHERE id=?", "1");
    // log.info(query);
});
helpers.registerHelpers(mvc);
mvc.route(request); %>